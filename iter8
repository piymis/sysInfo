#!/bin/bash
# sysinfo_page - A script to provide system infromaation in html

#### Variables

title="System information for $HOSTNAME"
RIGHT_NOW=$(date +"%r %x %Z")
TIME_STAMP="Last updated on $RIGHT_NOW"

#### Functions

system_info()
{
    echo "<h2>System release info</h2>"
    echo "<p>Function not yet implemented</p>"
}

show_uptime()
{

    echo "<h2>System uptime</h2>"
    echo "<pre>"
    uptime
    echo "</pre>"
}

drive_space()
{
    
    echo "<h2>Filesystem space</h2>"
    echo "<pre>"
    df -h
    echo "</pre>"
}

home_space()
{
    # Only superuser shoult execute this
    if [ $(id -u) = "0" ]; then
        echo "<h2>Home directory pace used by user</h2>"
        echo "<pre>"
        du -s /home/* | sort -nr
        echo "</pre>"
    fi
}

usage()
{
    echo "Usage: iter7 [[[-f file] [-i]]| [-h]]"
}

write_page()
{
    cat <<- _EOF_
	    <html>
	    <head>
	    <title>
	    $title $HOSTNAME
	    </title>
	    </head>
	    <body>
	    $title 
	    <p>$TIME_STAMP</p>
        $(system_info)
        $(show_uptime)
        $(drive_space)
        $(home_space)
        </body>
        </html>
_EOF_
}



#### Main

interactive=
file_name=~/sysInfo.html

while [ "$1" != "" ]; do
    case $1 in
        -i | --interactive  ) interactive=1;;
        -h | --help )         usage;
                              exit;;
        -f | --file )         shift;
                              file_name = $1;;
        * )                   usage;
                              exit 1
    esac
    shift
done


#### Interactive mode

if [ "$interactive" = "1" ]; then
    echo -n "Please enter a filename [$file_name] > "
    read response

    if [ -n "$response" ]; then
        file_name=$response
    fi

    if [ -f $file_name ]; then
        echo -n "Output file exists. Overwrite? (y/n) > "
        read input
        if [ "$input" != "y" ]; then
            echo "Exiting program."
            exit 1
        fi
    fi
fi

#### System information output

write_page > $file_name
